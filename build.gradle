plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
    id 'org.jetbrains.kotlin.plugin.allopen' version "1.5.21"
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.5.21'
    id 'application'
    id 'java-library'
    id 'java'
}

group = 'com.github.jakode2020'
version = '0.5.0-build3'

repositories {
    mavenCentral()
}

dependencies {
    // Serialization Json
    implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.1'

    // Junit5
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testCompileOnly 'junit:junit:4.13.2'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine'

    // Assertions
    testImplementation 'com.google.truth:truth:1.1.3'
    testImplementation 'org.hamcrest:hamcrest:2.2'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

compileTestKotlin {
    kotlinOptions.jvmTarget = '1.8'
}

tasks.named('jar') {
    manifest {
        attributes('Implementation-Title': project.name, 'Implementation-Version': project.version)
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set("sources")
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}

allOpen {
    annotation("kpy.util.annotations.Mockable")
}